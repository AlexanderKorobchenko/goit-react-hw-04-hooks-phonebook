{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","protoType","PropTypes","string","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","form","preventDefault","contact","id","uuidv4","label","input","type","pattern","required","onChange","input_number","button","func","Filter","filter","onChangeFilter","ContactList","contacts","deleteContact","list","map","item","onClick","contactsАForDevelopment","App","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","window","setItem","stringify","currentId","data","some","includes","alert","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942089b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1EPtL\",\"label\":\"ContactForm_label__1Qt3A\",\"input\":\"ContactForm_input__1RhfR\",\"input_number\":\"ContactForm_input_number__1RJhT\",\"button\":\"ContactForm_button__3mtX9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3edov\",\"item\":\"ContactList_item__1u0Xw\",\"button\":\"ContactList_button__1dt61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__31bVX\",\"input\":\"Filter_input__2ZV4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3EyVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2esD-\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    onSubmit(contact);\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input_number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.protoType = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        value={filter}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li className={s.item} key={contact.id}>\r\n            <span>\r\n              {contact.name}: {contact.number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              id={contact.id}\r\n              onClick={() => deleteContact(contact.id)}\r\n            >\r\n              remove\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\n// массив контактов для разработки, после сдачи заменить на пустой массив\nconst contactsАForDevelopment = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(localStorage.getItem('contacts')) ?? contactsАForDevelopment\n    );\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = data => {\n    if (contacts.some(contact => contact.name.includes(data.name))) {\n      return alert(`${data.name} is already in contacts!`);\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const deleteContact = currentId => {\n    setContacts([...contacts.filter(contact => contact.id !== currentId)]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value.toLocaleLowerCase());\n  };\n\n  const turnOnFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addContact}></ContactForm>\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n        {filter === '' ? (\n          <ContactList contacts={contacts} deleteContact={deleteContact} />\n        ) : (\n          <ContactList\n            contacts={turnOnFilter()}\n            deleteContact={deleteContact}\n          />\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}